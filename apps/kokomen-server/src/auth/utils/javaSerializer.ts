// Redis Java Serializer
export class JavaSerializer {
  // Serialize Java Long - Redis dump 참고
  static serializeLong(value: number): Buffer {
    // Redis 헤더 (마지막 8바이트는 값)
    const header = Buffer.from([
      0xac, 0xed, 0x00, 0x05, 0x73, 0x72, 0x00, 0x0e, 0x6a, 0x61, 0x76, 0x61,
      0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x4c, 0x6f, 0x6e, 0x67, 0x3b, 0x8b,
      0xe4, 0x90, 0xcc, 0x8f, 0x23, 0xdf, 0x02, 0x00, 0x01, 0x4a, 0x00, 0x05,
      0x76, 0x61, 0x6c, 0x75, 0x65, 0x78, 0x72, 0x00, 0x10, 0x6a, 0x61, 0x76,
      0x61, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
      0x72, 0x86, 0xac, 0x95, 0x1d, 0x0b, 0x94, 0xe0, 0x8b, 0x02, 0x00, 0x00,
      0x78, 0x70
    ]);

    // 실제 long 값 (8바이트)
    const valueBuffer = Buffer.alloc(8);
    valueBuffer.writeBigInt64BE(BigInt(value));

    return Buffer.concat([header, valueBuffer]);
  }

  // Serialize Java Integer - Redis dump 참고
  static serializeInteger(value: number): Buffer {
    // Redis 헤더 (마지막 4바이트는 값)
    const header = Buffer.from([
      0xac, 0xed, 0x00, 0x05, 0x73, 0x72, 0x00, 0x11, 0x6a, 0x61, 0x76, 0x61,
      0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
      0x72, 0x12, 0xe2, 0xa0, 0xa4, 0xf7, 0x81, 0x87, 0x38, 0x02, 0x00, 0x01,
      0x49, 0x00, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x78, 0x72, 0x00, 0x10,
      0x6a, 0x61, 0x76, 0x61, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x4e, 0x75,
      0x6d, 0x62, 0x65, 0x72, 0x86, 0xac, 0x95, 0x1d, 0x0b, 0x94, 0xe0, 0x8b,
      0x02, 0x00, 0x00, 0x78, 0x70
    ]);

    // 실제 int 값 (4바이트)
    const valueBuffer = Buffer.alloc(4);
    valueBuffer.writeInt32BE(value);

    return Buffer.concat([header, valueBuffer]);
  }

  // Deserialize Java Long - 마지막 8바이트 값 추출
  static deserializeLong(buffer: Buffer): number {
    const valueBuf = buffer.slice(-8);
    return Number(valueBuf.readBigInt64BE(0));
  }

  // Deserialize Java Integer - 마지막 4바이트 값 추출
  static deserializeInteger(buffer: Buffer): number {
    const valueBuf = buffer.slice(-4);
    return valueBuf.readInt32BE(0);
  }
}
